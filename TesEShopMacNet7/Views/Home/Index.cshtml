@using TestEShopMacNet7.Models.Product
@inject TestEShopMacNet7.Data.ApplicationDbContext dbContext

@model IEnumerable<Product>

@{
    ViewData["Title"] = "Home Page";

}

<div class="row mt-0 mb-4">
    <div class="text-center bg-dark text-white py-5 fw-bold">
        <h1 class="display-3">Kaťušky Eshop</h1>
    </div>
</div>
<form asp-action="Index">
    <div class="row">
        <div class="col-2">
            <div class="row mb-2">
                <select name="OrderBy">
                    @if (ViewData["OrderBy"]?.ToString() == "cheap")
                    {
                        <option value="cheap" selected>Od nejlevněšího</option>
                    }
                    else
                    {
                        <option value="cheap">Od nejlevněšího</option>
                    }
                    @if (ViewData["OrderBy"]?.ToString() == "expensive")
                    {
                        <option value="expensive" selected>Od nejdražšího</option>
                    }
                    else
                    {
                        <option value="expensive">Od nejdražšího</option>
                    }
                    @if (ViewData["OrderBy"]?.ToString() == "newest")
                    {
                        <option value="newest" selected>Od nejnovějšího</option>
                    }
                    else
                    {
                        <option value="newest">Od nejnovějšího</option>
                    }
                    @if (ViewData["OrderBy"]?.ToString() == "oldest")
                    {
                        <option value="oldest" selected>Od nejstaršího</option>
                    }
                    else
                    {
                        <option value="oldest">Od nejstaršího</option>
                    }
                </select>
            </div>
            <div class="row accordion" role="tablist">
                <div class="card">
                    <div class="card-header" role="tab">
                        <a class="collapsed text-decoration-none text-monospace" data-bs-toggle="collapse" href="#CategoryFilter" aria-expanded="true" aria-controls="CategoryFilter">
                            <div class="mb-0 h-6" id="HeadCategoryFilter">
                                Kategorie
                            </div>
                        </a>
                    </div>
                    <div id="CategoryFilter" class="collapse show" role="tabpanel" aria-labelledby="HeadCategoryFilter" data-bs-parent="#harmonika">
                        <div class="card-body">
                            @foreach (var category in dbContext.Categories.DefaultIfEmpty())
                            {
                                @if (category is not null)
                                {
                                    <div class="form-group">
                                        <input type="checkbox" name="Categories" value="@category.Id" @((ViewData["Categories"] ?? "").ToString()!.Contains(@category.Id) ? "checked" : "")>
                                        <label class="align-middle" for="@category.Id">@category.DisplayName</label>
                                    </div>
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>
            <div class="row accordion" role="tablist">
                <div class="card">
                    <div class="card-header" role="tab">
                        <a class="collapsed text-decoration-none text-monospace" data-bs-toggle="collapse" href="#BrandFilter" aria-expanded="true" aria-controls="BrandFilter">
                            <div class="mb-0 h-6" id="HeadBrandFilter">
                                Značka
                            </div>
                        </a>
                    </div>
                    <div id="BrandFilter" class="collapse show" role="tabpanel" aria-labelledby="HeadBrandFilter" data-bs-parent="#harmonika">
                        <div class="card-body">
                            @foreach (var brand in dbContext.Brands.DefaultIfEmpty())
                            {
                                @if (brand is not null)
                                {
                                    <div class="form-group">
                                        <input type="checkbox" name="Brands" value="@brand?.Id" @((ViewData["Brands"] ?? "").ToString()!.Contains(@brand?.Id) ? "checked" : "")>
                                        <label class="align-middle" for="@brand.Id">@brand.Name</label>
                                    </div>
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>
            <div>
                <button class="btn btn-primary mt-2" method="submit">Filtrovat</button>
            </div>


        </div>
        <div class="col-10 text-center">
            <div class="row gy-4 gx-2 gx-lg-4 row-cols-2 row-cols-md-3 row-cols-lg-4 justify-content-left">
                @foreach (var product in Model)
                {
                    <div class="col">
                        <a class="text-decoration-none" asp-controller="Product" asp-action="Details" asp-route-Id="@product.Id">
                            <div class="card h-100">
                                <!-- Sale badge-->
                                @if (product.SalePrice > 0 && product.Price > product.SalePrice)
                                {
                                    <div class="badge bg-dark text-white position-absolute" style="top: 0.5rem; right: 0.5rem">Sleva</div>
                                }
                                <!-- Product image-->
                                <img class="card-img-top" src="https://dummyimage.com/450x300/dee2e6/6c757d.jpg" alt="..." />
                                <!-- Product details-->
                                <div class="card-body p-2">
                                    <div class="justify-content-center text-decoration-none text-dark">
                                        <!-- Product name-->
                                        <div class="card-title mb-auto">
                                            <p class="text-center mb-1 fw-bolder h5 overflow-hidden border-0 bg-transparent" style="resize:none;" disabled>@Html.DisplayFor(modelItem => product.Name)</p>
                                        </div>
                                        <!-- Product description-->
                                        <div class="mx-auto mt-auto mb-auto">
                                            <textarea class="card-text text-muted h6 overflow-hidden border-0" rows="5" style="resize:none;" disabled>@product.Description</textarea>
                                        </div>
                                        <!-- Product reviews-->
                                        <div class="d-flex justify-content-center small text-warning mb-0">
                                            @for (int i = 1; i <= 5; i++)
                                            {
                                                string filled = (product.Rating >= i ? "bi-star-fill" : "bi-star");
                                                <div class="@filled"></div>
                                            }
                                        </div>
                                        <!-- Product price-->
                                        @{
                                            string InSale = (product.SalePrice > 0 && product.Price > product.SalePrice ? "text-muted text-decoration-line-through no_decoration" : "no_decoration");
                                        }

                                    </div>
                                </div>
                                <!-- Product actions-->
                                <div class="card-footer border-top-0 mt-auto bg-transparent px-0">
                                    <div class="text-decoration-none text-dark fw-bolder">
                                        @if (product.SalePrice > 0 && product.Price > product.SalePrice)
                                        {
                                            <span class="@InSale">@product.Price Kč</span>
                                            @(product.SalePrice.ToString() + "Kč")
                                        }
                                        else
                                        {
                                            @(product.Price.ToString() + "Kč")
                                        }
                                    </div>
                                    <div class="text-center">
                                        <button class="btn btn-outline-dark mt-auto text-decoration-none p-1 @(product.InStock > 0 ? "" : "disabled")" onclick="AddToCart(`@product.Id`)" type="reset">
                                            Přidat do košíku
                                        </button>
                                        <span class="@(product.InStock > 0 ? "text-success" : "text-danger")">@(product.InStock > 0 ? "Skladem" : "Neni skladem")</span>
                                    </div>
                                </div>
                            </div>
                        </a>
                    </div>

                }
            </div>
            <div class="row mt-4">
                <div class="button-group">
                    @for (int i = 0; i < (int)(ViewData["Pages"] ?? 1); i++)
                    {
                        <input class="btn btn-primary" name="ActualPage" value="@(i + 1)" type="submit" />
                    }
                </div>
            </div>
        </div>
    </div>
</form>

<script src="/js/AddToCart.js"></script>
<script src="/js/RemoveFromCart.js"></script>